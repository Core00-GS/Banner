libraries.checking.start=Checking libraries, please wait...
libraries.downloadsource=DownloadSource: {0}
libraries.check.end=All libraries are nice :) !
file.download.nook=The download of {0} failed :(
file.download.nook.md5=The download of {0} failed because the MD5 of this file is {1} while it should be {2}. The file got deleted for security reasons.
download.file=Downloading file {0} with size {1}
download.file.ok=Download finished for {0} !
banner.launch.welcomemessage=Welcome to Banner 1.20.3! - Mohist Developement Group
banner.start.server.error=An error occurs with the server start. You can ask for help to the Mohist support on Discord or GitHub.
eula=You need to accept the eula to launch your server. Type true to continue.
eula.text=By changing the setting below to true you are indicating your agreement to our EULA ({0}).
file.download.percentage=Downloading {0} - {1}%
libraries.global.percentage=Global percentage > {0}
update.check=Update in check...
update.stopcheck=If you don't want to enable update check, set check_update in banner-config/banner.yml to false
update.latest=No update found, latest version: ({0}) current version: ({1})
update.detect=The latest Banner version is {0} but you have {1}. The latest version has been built on {2}. You should update to fix recent bugs !
check.update.noci=[!] Unable to connect to Mohist web service.
pluginscommand.des=Gets a list of plugins running on the server
pluginscommand.1=Plugins
pluginscommand.load=\u00A76/{0} load <plugin> \u00A7b- \u00A7aLoads a plugin (File name)
pluginscommand.unload=\u00A76/{0} unload <plugin> \u00A7b- \u00A7aUnloads a plugin (Plugin name)
pluginscommand.reload=\u00A76/{0} reload <plugin> \u00A7b- \u00A7aUnloads and loads a plugin (Plugin name)
pluginscommand.loaded=\u00A7a{0} {1} loaded successfully.
pluginscommand.unloaded=\u00A7a{0} {1} unloaded successfully.
pluginscommand.reloaded=\u00A7a{0} reloaded successfully.
pluginscommand.noplugin=\u00A7cNo such plugin: {0}
pluginscommand.nofile=\u00A7cNo such file: {0}
pluginscommand.noyml=\u00A7cJar file doesn't contain a plugin.yml file: {0}.jar
pluginscommand.alreadyloaded=\u00A7c{0} is already loaded!
pluginscommand.notload=\u00A7cFailed to load {0}! (Check console for details.)
pluginscommand.notunload=\u00A7cFailed to unload {0}! (Check console for details.)
pluginscommand.nojar=\u00A7c{0}'s jar file is missing!
pluginscommand.unloaderror=\u00A7cAn error occurred while unloading {0}!
pluginscommand.reloaderror=\u00A7cAn error occurred while reloading {0}!
load.libraries=Loading libraries, please wait...
server.region.prepare=Preparing start region for dimension {}
spigot.lib.loading=[{}] Loading {} libraries... please wait
spigot.lib.found=[{}] Found libraries {}
spigot.lib.loaded=[{}] Loaded libraries {}
banner.event_handler.register=Registering Banner Event Dispatchers...
bukkit.plugin.loading.info=Loading Bukkit plugins, please wait...
bukkit.plugin.loading=Loading %s
bukkit.plugin.disabling=Disabling %s
bukkit.plugin.enabling=Enabling
stackdeobf.requesting=Requesting {}...
stackdeobf.received=Received {} bytes ({}) with status {} from {} in {}ms
stackdeobf.verifying=Verifying cache of {} mappings...
stackdeobf.verified=Verified cache of {} mappings (took {}ms)
stackdeobf.parsing=Parsing {} mappings...
stackdeobf.parsed=Parsed {} mappings (took {}ms)
stackdeobf.caching=Caching {} mappings...
stackdeobf.cached=Cached {} mappings (took {}ms)
stackdeobf.download.already=Mappings for {} build {} are already downloaded
stackdeobf.downloading=Downloading {} mappings jar for build {}...
stackdeobf.getbuild=Latest build for {} is already cached ({} hour(s) ago, refresh in {} hour(s))
stackdeobf.refreshing=Refreshing latest {} build (last refresh was {} hour(s) ago)...
stackdeobf.fetching=Fetching latest {} build...
stackdeobf.cached.lastest=Cached latest {} build version: {}
stackdeobf.cantfind=Can't find
stackdeobf.mappings.version=mappings for minecraft version
stackdeobf.cantparse=Can't parse response from
stackdeobf.for=for
stackdeobf.inject.logger=Injecting into root logger...
stackdeobf.downloading.intermediary=Downloading intermediary mappings for {}...
stackdeobf.mojang.license=By enabling mojang mappings, you agree to their license:
stackdeobf.invalid.mcversion=Invalid minecraft version:
stackdeobf.mcversion.notfound=(not found in mojang version manifest)
stackdeobf.creating=Creating asynchronous mapping cache executor...
stackdeobf.cached.mappings=Cached mappings have been built (took {}ms)
stackdeobf.classes=Classes:
stackdeobf.methods=Methods:
stackdeobf.fields=Fields:
stackdeobf.shutting.down=Shutting down asynchronous mapping cache executor...
stackdeobf.mojang.licenseheader.1=(c) 2020 Microsoft Corporation.These mappings are provided "as-is" and you bear the risk of using them.
stackdeobf.mojang.licenseheader.2=You may copy and use the mappings for development purposes, but you may not redistribute the mappings complete and unmodified.
stackdeobf.mojang.licenseheader.3=Microsoft makes no warranties, express or implied, with respect to the mappings provided here.
stackdeobf.mojang.licenseheader.4=Use and modification of this document or the source code (in any form) of Minecraft: Java Edition is governed by
stackdeobf.mojang.licenseheader.5=the Minecraft End User License Agreement available at https://account.mojang.com/documents/minecraft_eula.
error-symlink=File system do not support symbol links
symlink-file-exist=File has been existed while create symlink
registry.begin=Registering for Bukkit ...
registry.biome=Registered {} new biomes
registry.item=Registered {} new items
registry.block=Registered {} new blocks
registry.villager-profession=Registered {} new villager professions
registry.environment=Registered {} new dimensions
registry.entity-type=Registered {} new entity types
registry.enchantment=Registered {} enchantments
registry.potion=Registered {} new potion effect types